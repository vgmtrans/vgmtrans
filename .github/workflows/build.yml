name: Build
on: 
  push:
    branches:
      - master
  pull_request:
  workflow_dispatch:
jobs:
  macos:
    name: macOS 11.x+
    runs-on: ${{ (matrix.target == 'intel' && 'macos-13') || 'macos-14' }}
    strategy:
      matrix:
        target: [ "intel", "arm64" ]
    permissions:
      id-token: write
      contents: read
      attestations: write
    env:
      HOMEBREW_PREFIX: ${{ (matrix.target == 'intel' && '/usr/local') || '/opt/homebrew' }}
    steps:
      - uses: actions/checkout@v4
        with:
          submodules: recursive
          show-progress: false
      - name: "Install dependencies"
        run: |
          brew install -f --overwrite qt@6
          echo "BRANCH=$(git rev-parse --abbrev-ref HEAD)" >> $GITHUB_ENV
          echo "/usr/local/bin" >> $GITHUB_PATH
      - name: "Prepare build"
        run: cmake --preset "macos-${{ matrix.target }}"
      - name: "Build project"
        # $(sysctl -n hw.logicalcpu) is required to not make XCode spawn infinite threads...
        run: cmake --build --preset "macos-${{ matrix.target }}-release" --parallel $(sysctl -n hw.logicalcpu) --target vgmtrans
      - name: "Package DMG (macOS)"
        working-directory: "build/macos-${{ matrix.target }}/"
        run: |
          ${{ env.HOMEBREW_PREFIX }}/bin/macdeployqt \
            bin/VGMTrans.app \
            -verbose=3 -always-overwrite -appstore-compliant
      - name: "Checkout create-dmg"
        uses: actions/checkout@v4
        with:
          repository: create-dmg/create-dmg
          path: "./build/macos-${{ matrix.target }}/create-dmg"
          ref: master
      - name: Build macOS DMG
        shell: bash
        working-directory: "build/macos-${{ matrix.target }}/"
        run: |
          ./create-dmg/create-dmg \
            --no-internet-enable \
            --volname "VGMTrans" \
            --volicon "bin/VGMTrans.app/Contents/Resources/appicon.icns" \
            --background "${{ github.workspace }}/bin/dmg/bg.tif" \
            --text-size 12 \
            --window-pos 400 400 \
            --window-size 700 400 \
            --icon-size 80 \
            --icon "VGMTrans.app" 313 97 \
            --hide-extension "VGMTrans.app" \
            --app-drop-link 520 97 \
            --add-file "Unblock & Sign" "${{ github.workspace }}/bin/dmg/selfsign" 313 280 \
            --add-file "README.txt" "${{ github.workspace }}/bin/dmg/README.txt" 520 280 \
            "bin/VGMTrans-${{ github.sha }}.dmg" \
            "bin"
      - name: Generate artifact attestation
        uses: actions/attest-build-provenance@v1
        if: ${{ github.event_name != 'pull_request' }}
        with:
          subject-name: VGMTrans-${{ github.sha }}-${{ env.GITHUB_REF_NAME }}-${{ matrix.target }}-${{ runner.os }}
          subject-path: "build/macos-${{ matrix.target }}/bin/VGMTrans-${{ github.sha }}.dmg"
      - name: "Upload artifact"
        uses: actions/upload-artifact@v4
        with:
          name: VGMTrans-${{ github.sha }}-${{ env.GITHUB_REF_NAME }}-${{ matrix.target }}-${{ runner.os }}.dmg
          path: "build/macos-${{ matrix.target }}/bin/VGMTrans-${{ github.sha }}.dmg"
  linux:
    runs-on: ubuntu-20.04
    name: Linux, x64
    permissions:
      id-token: write
      contents: read
      attestations: write
    steps:
      - uses: actions/checkout@v4
        with:
          submodules: recursive
          show-progress: false
      - name: "Set environment variables"
        run: |
          echo "BRANCH=$(git rev-parse --abbrev-ref HEAD)" >> $GITHUB_ENV
      - name: "Install dependencies"
        run: |
          wget https://apt.llvm.org/llvm.sh
          chmod +x llvm.sh
          sudo ./llvm.sh 18
          sudo add-apt-repository ppa:okirby/qt6-backports
          sudo apt-get update && sudo apt-get upgrade -y
          sudo apt-get install -y --no-install-recommends \
            pkg-config \
            clang-18 lld-18 ninja-build \
            qt6-base-dev libqt6svg6-dev libqt6svg6 \
            qt6-tools-dev qt6-tools-dev-tools libgl1-mesa-dev \
            libjack-dev libsndfile1-dev libpulse-dev
          echo 'export PATH="/usr/local/opt/llvm/bin:$PATH"' >> ~/.bash_profile
      - name: "Prepare build"
        run: |
          export LDFLAGS="-L/usr/local/opt/llvm/lib"
          export CPPFLAGS="-I/usr/local/opt/llvm/include -fuse-ld=lld"
          export CC=clang-18
          export CXX=clang++-18
          cmake --preset linux-x64 \
            -G "Ninja Multi-Config" \
            -DCMAKE_INSTALL_PREFIX=/usr
      - name: "Build project"
        run: cmake --build --preset linux-x64-release
      - name: "Run install target"
        run: |
          export DESTDIR=appdir
          cmake --build --preset linux-x64-release --target install
      - name: "Make AppImage"
        working-directory: "build/linux-x64"
        run: |
          echo "Creating AppDir structure for AppImage"
          find appdir/
          mkdir -p appdir/usr/share
          cp ${{ github.workspace }}/bin/mame_roms.xml appdir/usr/bin
          cp ${{ github.workspace }}/src/ui/qt/resources/VGMTrans.desktop appdir/usr/share
          cp ${{ github.workspace }}/src/ui/qt/resources/vgmtrans.png appdir/
          mkdir -p appdir/usr/lib
          cp ${{ github.workspace }}/lib/bass/*.so appdir/usr/lib/
          echo "Downloading linuxdeployqt"
          wget -c -nv "https://github.com/probonopd/linuxdeployqt/releases/download/continuous/linuxdeployqt-continuous-x86_64.AppImage"
          chmod a+x linuxdeployqt-continuous-x86_64.AppImage
          echo "Creating AppImage"
          ./linuxdeployqt-continuous-x86_64.AppImage appdir/usr/share/VGMTrans.desktop \
            -executable=appdir/usr/lib/libbass.so -executable=appdir/usr/lib/libbassmidi.so \
            -appimage -extra-plugins=platforms/,platformthemes/ \
            -qmake=/usr/lib/qt6/bin/qmake6 \
            -verbose=10
          mkdir -p appdir/usr/share/licenses/VGMTrans
          cp ${{ github.workspace }}/LICENSE/LICENSE appdir/usr/share/licenses/VGMTrans/
          mv VGMTrans*.AppImage VGMTrans.AppImage
      - name: Generate artifact attestation
        uses: actions/attest-build-provenance@v1
        if: ${{ github.event_name != 'pull_request' }}
        with:
          subject-name: VGMTrans-${{ github.sha }}-${{ env.BRANCH }}-x86_64-${{ runner.os }}
          subject-path: "build/linux-x64/VGMTrans.AppImage"
      - name: "Upload artifact"
        uses: actions/upload-artifact@v4
        with:
          name: VGMTrans-${{ github.sha }}-${{ env.BRANCH }}-x86_64-${{ runner.os }}.AppImage
          path: "build/linux-x64/VGMTrans.AppImage"
  windows:
    runs-on: windows-2022
    strategy:
      matrix:
        target: ['x64']
    permissions:
      id-token: write
      contents: read
      attestations: write
    name: Windows, ${{ matrix.target }}
    steps:
       - uses: actions/checkout@v4
         with:
          submodules: recursive
          show-progress: false

       - name: "Source vcvars for ${{ matrix.target }}"
         uses: ilammy/msvc-dev-cmd@v1
         with:
            arch: ${{ matrix.target != 'x64' && (format('{0}_{1}', 'amd64', matrix.target)) || matrix.target }}

       - name: "Prepare build"
         run: |
          echo "BRANCH=$(git rev-parse --abbrev-ref HEAD)" | Out-File -FilePath $env:GITHUB_ENV -Encoding utf8 -Append
          cmake --preset win-${{ matrix.target }}

       - name: "Build project"
         run: cmake --build --preset win-${{ matrix.target }}-release --target vgmtrans

       - name: "Delete empty directories"
         run: Get-ChildItem -Directory -Recurse | Where-Object { $_.GetFileSystemInfos().Count -eq 0 } | Remove-Item -Force -Recurse

       - name: "Package artifact"
         run: 7z a "VGMTrans-${{ github.sha }}.zip" -r ".\build\win-${{ matrix.target }}\bin\*"

       - name: Generate artifact attestation
         uses: actions/attest-build-provenance@v1
         if: ${{ github.event_name != 'pull_request' }}
         with:
           subject-name: VGMTrans-${{ github.sha }}-${{ env.BRANCH }}-${{ matrix.target }}-${{ runner.os }}
           subject-path: "VGMTrans-${{ github.sha }}.zip"

       - name: "Upload artifact"
         uses: actions/upload-artifact@v4
         with:
           name: VGMTrans-${{ github.sha }}-${{ env.BRANCH }}-${{ matrix.target }}-${{ runner.os }}
           path: "VGMTrans-${{ github.sha }}.zip"
       
